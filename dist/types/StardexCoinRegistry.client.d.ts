/**
* This file was automatically generated by @cosmwasm/ts-codegen@1.10.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
import { CosmWasmClient, SigningCosmWasmClient, ExecuteResult } from "@cosmjs/cosmwasm-stargate";
import { Coin, StdFee } from "@cosmjs/amino";
import { Config, CoinResponse, ArrayOfCoinResponse } from "./StardexCoinRegistry.types";
export interface StardexCoinRegistryReadOnlyInterface {
    contractAddress: string;
    config: () => Promise<Config>;
    nativeToken: ({ denom }: {
        denom: string;
    }) => Promise<CoinResponse>;
    nativeTokens: ({ limit, startAfter }: {
        limit?: number;
        startAfter?: string;
    }) => Promise<ArrayOfCoinResponse>;
}
export declare class StardexCoinRegistryQueryClient implements StardexCoinRegistryReadOnlyInterface {
    client: CosmWasmClient;
    contractAddress: string;
    constructor(client: CosmWasmClient, contractAddress: string);
    config: () => Promise<Config>;
    nativeToken: ({ denom }: {
        denom: string;
    }) => Promise<CoinResponse>;
    nativeTokens: ({ limit, startAfter }: {
        limit?: number | undefined;
        startAfter?: string | undefined;
    }) => Promise<ArrayOfCoinResponse>;
}
export interface StardexCoinRegistryInterface extends StardexCoinRegistryReadOnlyInterface {
    contractAddress: string;
    sender: string;
    add: ({ nativeCoins }: {
        nativeCoins: string[][];
    }, fee?: number | StdFee | "auto", memo?: string, _funds?: Coin[]) => Promise<ExecuteResult>;
    remove: ({ nativeCoins }: {
        nativeCoins: string[];
    }, fee?: number | StdFee | "auto", memo?: string, _funds?: Coin[]) => Promise<ExecuteResult>;
    proposeNewOwner: ({ expiresIn, owner }: {
        expiresIn: number;
        owner: string;
    }, fee?: number | StdFee | "auto", memo?: string, _funds?: Coin[]) => Promise<ExecuteResult>;
    dropOwnershipProposal: (fee?: number | StdFee | "auto", memo?: string, _funds?: Coin[]) => Promise<ExecuteResult>;
    claimOwnership: (fee?: number | StdFee | "auto", memo?: string, _funds?: Coin[]) => Promise<ExecuteResult>;
}
export declare class StardexCoinRegistryClient extends StardexCoinRegistryQueryClient implements StardexCoinRegistryInterface {
    client: SigningCosmWasmClient;
    sender: string;
    contractAddress: string;
    constructor(client: SigningCosmWasmClient, sender: string, contractAddress: string);
    add: ({ nativeCoins }: {
        nativeCoins: string[][];
    }, fee?: number | StdFee | "auto", memo?: string, _funds?: Coin[]) => Promise<ExecuteResult>;
    remove: ({ nativeCoins }: {
        nativeCoins: string[];
    }, fee?: number | StdFee | "auto", memo?: string, _funds?: Coin[]) => Promise<ExecuteResult>;
    proposeNewOwner: ({ expiresIn, owner }: {
        expiresIn: number;
        owner: string;
    }, fee?: number | StdFee | "auto", memo?: string, _funds?: Coin[]) => Promise<ExecuteResult>;
    dropOwnershipProposal: (fee?: number | StdFee | "auto", memo?: string, _funds?: Coin[]) => Promise<ExecuteResult>;
    claimOwnership: (fee?: number | StdFee | "auto", memo?: string, _funds?: Coin[]) => Promise<ExecuteResult>;
}
