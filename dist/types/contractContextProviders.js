"use strict";
/**
* This file was automatically generated by @cosmwasm/ts-codegen@1.10.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.getProviders = void 0;
const StardexToken_provider_1 = require("./StardexToken.provider");
const StardexCoinRegistry_provider_1 = require("./StardexCoinRegistry.provider");
const StardexFactory_provider_1 = require("./StardexFactory.provider");
const StardexPair_provider_1 = require("./StardexPair.provider");
const StardexPairStable_provider_1 = require("./StardexPairStable.provider");
const StardexPairConcentrated_provider_1 = require("./StardexPairConcentrated.provider");
const StardexRouter_provider_1 = require("./StardexRouter.provider");
const StardexStakeNative_provider_1 = require("./StardexStakeNative.provider");
const StardexStakeRewards_provider_1 = require("./StardexStakeRewards.provider");
const getProviders = (address, cosmWasmClient, signingCosmWasmClient) => ({
    stardexToken: new StardexToken_provider_1.StardexToken({
        address,
        cosmWasmClient,
        signingCosmWasmClient
    }),
    stardexCoinRegistry: new StardexCoinRegistry_provider_1.StardexCoinRegistry({
        address,
        cosmWasmClient,
        signingCosmWasmClient
    }),
    stardexFactory: new StardexFactory_provider_1.StardexFactory({
        address,
        cosmWasmClient,
        signingCosmWasmClient
    }),
    stardexPair: new StardexPair_provider_1.StardexPair({
        address,
        cosmWasmClient,
        signingCosmWasmClient
    }),
    stardexPairStable: new StardexPairStable_provider_1.StardexPairStable({
        address,
        cosmWasmClient,
        signingCosmWasmClient
    }),
    stardexPairConcentrated: new StardexPairConcentrated_provider_1.StardexPairConcentrated({
        address,
        cosmWasmClient,
        signingCosmWasmClient
    }),
    stardexRouter: new StardexRouter_provider_1.StardexRouter({
        address,
        cosmWasmClient,
        signingCosmWasmClient
    }),
    stardexStakeNative: new StardexStakeNative_provider_1.StardexStakeNative({
        address,
        cosmWasmClient,
        signingCosmWasmClient
    }),
    stardexStakeRewards: new StardexStakeRewards_provider_1.StardexStakeRewards({
        address,
        cosmWasmClient,
        signingCosmWasmClient
    })
});
exports.getProviders = getProviders;
