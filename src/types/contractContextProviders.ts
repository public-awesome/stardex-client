/**
* This file was automatically generated by @cosmwasm/ts-codegen@1.10.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

import { CosmWasmClient, SigningCosmWasmClient } from "@cosmjs/cosmwasm-stargate";
import { IQueryClientProvider, ISigningClientProvider, IMessageComposerProvider } from "./contractContextBase";
import { StardexTokenQueryClient } from "./StardexToken.client";
import { StardexTokenClient } from "./StardexToken.client";
import { StardexToken } from "./StardexToken.provider";
import { StardexCoinRegistryQueryClient } from "./StardexCoinRegistry.client";
import { StardexCoinRegistryClient } from "./StardexCoinRegistry.client";
import { StardexCoinRegistry } from "./StardexCoinRegistry.provider";
import { StardexFactoryQueryClient } from "./StardexFactory.client";
import { StardexFactoryClient } from "./StardexFactory.client";
import { StardexFactory } from "./StardexFactory.provider";
import { StardexPairQueryClient } from "./StardexPair.client";
import { StardexPairClient } from "./StardexPair.client";
import { StardexPair } from "./StardexPair.provider";
import { StardexPairStableQueryClient } from "./StardexPairStable.client";
import { StardexPairStableClient } from "./StardexPairStable.client";
import { StardexPairStable } from "./StardexPairStable.provider";
import { StardexPairConcentratedQueryClient } from "./StardexPairConcentrated.client";
import { StardexPairConcentratedClient } from "./StardexPairConcentrated.client";
import { StardexPairConcentrated } from "./StardexPairConcentrated.provider";
import { StardexRouterQueryClient } from "./StardexRouter.client";
import { StardexRouterClient } from "./StardexRouter.client";
import { StardexRouter } from "./StardexRouter.provider";
export interface IContractsContext {
  stardexToken: IQueryClientProvider<StardexTokenQueryClient> & ISigningClientProvider<StardexTokenClient>;
  stardexCoinRegistry: IQueryClientProvider<StardexCoinRegistryQueryClient> & ISigningClientProvider<StardexCoinRegistryClient>;
  stardexFactory: IQueryClientProvider<StardexFactoryQueryClient> & ISigningClientProvider<StardexFactoryClient>;
  stardexPair: IQueryClientProvider<StardexPairQueryClient> & ISigningClientProvider<StardexPairClient>;
  stardexPairStable: IQueryClientProvider<StardexPairStableQueryClient> & ISigningClientProvider<StardexPairStableClient>;
  stardexPairConcentrated: IQueryClientProvider<StardexPairConcentratedQueryClient> & ISigningClientProvider<StardexPairConcentratedClient>;
  stardexRouter: IQueryClientProvider<StardexRouterQueryClient> & ISigningClientProvider<StardexRouterClient>;
}
export const getProviders = (address?: string, cosmWasmClient?: CosmWasmClient, signingCosmWasmClient?: SigningCosmWasmClient) => ({
  stardexToken: new StardexToken({
    address,
    cosmWasmClient,
    signingCosmWasmClient
  }),
  stardexCoinRegistry: new StardexCoinRegistry({
    address,
    cosmWasmClient,
    signingCosmWasmClient
  }),
  stardexFactory: new StardexFactory({
    address,
    cosmWasmClient,
    signingCosmWasmClient
  }),
  stardexPair: new StardexPair({
    address,
    cosmWasmClient,
    signingCosmWasmClient
  }),
  stardexPairStable: new StardexPairStable({
    address,
    cosmWasmClient,
    signingCosmWasmClient
  }),
  stardexPairConcentrated: new StardexPairConcentrated({
    address,
    cosmWasmClient,
    signingCosmWasmClient
  }),
  stardexRouter: new StardexRouter({
    address,
    cosmWasmClient,
    signingCosmWasmClient
  })
});